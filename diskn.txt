#include<stdio.h>
#include<stdlib.h>

int q[10],i,j,n,m,a,b,c,d,e;

void first()
{
  int totalhead=0,f[10];
  for(i=0;i<n;i++)
   {
      f[i]=q[i];
      totalhead=totalhead+abs(q[i]-m);
      m=q[i];      
   }
  printf("Totalheadmoment is:%d\n",totalhead);
  printf("Disk traversal order\n");
  for(i=0;i<n;i++)
   {
     printf("%d\t",f[i]);
   } 
  printf("\n");
}

void dscan()
{
  int temp,totalhead=0,index,initial,k=0,f[10];
  for(i=0;i<n;i++)
   {
     for(j=0;j<n-i-1;j++)
      {
        if(q[j]>q[j+1])
         {
           temp=q[j];
           q[j]=q[j+1];
           q[j+1]=temp;
         }
      }
   }
  for(i=0;i<n;i++)
   {
     if(d<q[i])
      {
        index=i;
        break;
      }
   }
  for(i=index-1;i>=0;i--)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-d);
      d=q[i];
      k++;   
   }  
  totalhead=totalhead+abs(q[i+1]-0);
    initial=0;
  for(i=index;i<n;i++)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-initial);
      initial=q[i];
      k++; 
   }  

  printf("Totalheadmoment is:%d\n",totalhead);
  printf("Disk traversal order\n");
  for(i=0;i<n;i++)
   {
     printf("%d\t",f[i]);
   } 
  printf("\n"); 
      
}

void scan()
{
  int temp,totalhead=0,index,initial,k=0,f[10];
  for(i=0;i<n;i++)
   {
     for(j=0;j<n-i-1;j++)
      {
        if(q[j]>q[j+1])
         {
           temp=q[j];
           q[j]=q[j+1];
           q[j+1]=temp;
         }
      }
   }
  for(i=0;i<n;i++)
   {
     if(a<q[i])
      {
        index=i;
        break;
      }
   }
  for(i=index;i<n;i++)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-a);
      a=q[i];
      k++;   
   }  
  totalhead=totalhead+abs(c-q[i-1]-1);
    initial=c-1;
  for(i=index-1;i>=0;i--)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-initial);
      initial=q[i];
      k++; 
   }  

  printf("Totalheadmoment is:%d\n",totalhead);
  printf("Disk traversal order\n");
  for(i=0;i<n;i++)
   {
     printf("%d\t",f[i]);
   } 
  printf("\n"); 
      
}

void dcscan()
{
  int temp,totalhead=0,index,initial,k=0,f[10];
  for(i=0;i<n;i++)
   {
     for(j=0;j<n-i-1;j++)
      {
        if(q[j]>q[j+1])
         {
           temp=q[j];
           q[j]=q[j+1];
           q[j+1]=temp;
         }
      }
   }
  for(i=0;i<n;i++)
   {
     if(e<q[i])
      {
        index=i;
        break;
      }
   }
  for(i=index-1;i>=0;i--)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-e);
      e=q[i];
      k++;   
   }  
  totalhead=totalhead+abs(q[i+1]-0);
  totalhead=totalhead+abs(c-0-1);
   initial=c-1;
  for(i=n-1;i>=index;i--)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-initial);
      initial=q[i];
      k++; 
   }  

  printf("Totalheadmoment is:%d\n",totalhead);
  printf("Disk traversal order\n");
  for(i=0;i<n;i++)
   {
     printf("%d\t",f[i]);
   } 
  printf("\n"); 
}


void cscan()
{
  int temp,totalhead=0,index,initial,k=0,f[10];
  for(i=0;i<n;i++)
   {
     for(j=0;j<n-i-1;j++)
      {
        if(q[j]>q[j+1])
         {
           temp=q[j];
           q[j]=q[j+1];
           q[j+1]=temp;
         }
      }
   }
  for(i=0;i<n;i++)
   {
     if(b<q[i])
      {
        index=i;
        break;
      }
   }
  for(i=index;i<n;i++)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-b);
      b=q[i];
      k++;   
   }  
  totalhead=totalhead+abs(c-q[i-1]-1);
  totalhead=totalhead+abs(c-0-1);
   initial=0;
  for(i=0;i<index;i++)
   {
     f[k]=q[i];
     totalhead=totalhead+abs(q[i]-initial);
      initial=q[i];
      k++; 
   }  

  printf("Totalheadmoment is:%d\n",totalhead);
  printf("Disk traversal order\n");
  for(i=0;i<n;i++)
   {
     printf("%d\t",f[i]);
   } 
  printf("\n"); 
}

int main()
{
  int ch,cd;
  printf("Enter the size\n");
  scanf("%d",&n);
  printf("Enter the values\n");
  for(i=0;i<n;i++)
    scanf("%d",&q[i]);
  printf("Enter the initial value\n");
   {
    scanf("%d",&m);
     a=m;
     b=m;
     d=m;
     e=m;
   } 
  printf("Enter the maximum value\n");
  scanf("%d",&c);
  while(1)
  {
   printf("1.FCFS\n2.SCAN\n3.C-SCAN\n4.Exit\nEnter your choice\n");
   scanf("%d",&ch);
   switch(ch)
    {
       case 1:first();
              break;
       case 2:printf("1.Increasing Order\n2.Decreasing order\n");
              scanf("%d",&cd);
              if(cd==1)
               {
                 scan();  
               }
              else if(cd==2)
               {
                  dscan();
               }
              break;
       case 3:printf("1.Increasing order\n2.Decreasing order\n");
              scanf("%d",&cd);
              if(cd==1)
              {
                 cscan();
              }
              else if(cd==2)
              {
                  dcscan();
              }
              break;
       case 4:exit(0);
              break;
       default:printf("Wrong option\n");

    }
  }
   return 0; 
}

