#include<stdio.h>
#include<stdlib.h>
#include<string.h>

char t1[20],t2[20],t3[20],t4[20],label[20],operand[20],opcode[20],add[20],length[20],size[20],ad[20],a[20],hex[20];
int startadd,o=-1,s=-1,i,j;
FILE *fp1,*fp2,*fp3,*fp4,*fp5,*fp6;

struct optab
{
  char code[20],mem[20];
}op[20];

struct sym
{
  char label1[20],add1[20];
}sy[20];

void readoptab()
{
  while(1)
  {
    o++;
    fscanf(fp6,"%s%s",op[o].code,op[o].mem);
    if(getc(fp6)==EOF)
      break;
  }
}

void symtab()
{
 while(1)
 {
  s++;
  fscanf(fp2,"%s%s",sy[s].label1,sy[s].add1);
  if(getc(fp2)==EOF)
    break;
 }
}

void readline()
{
 strcpy(t1,"");strcpy(t2,"");strcpy(t3,"");strcpy(t4,"");
 fscanf(fp1,"%s",t1);
 if(getc(fp1)!='\n')
 {
  fscanf(fp1,"%s",t2);
  if(getc(fp1)!='\n')
  {
    fscanf(fp1,"%s",t3);
    if(getc(fp1)!='\n')
    {
     fscanf(fp1,"%s",t4);
    }
  }
 }
 if(strcmp(t1,"")!=0 && strcmp(t2,"")!=0 && strcmp(t3,"")!=0 && strcmp(t4,"")!=0)
 {
  strcpy(add,t1);strcpy(label,t2);strcpy(opcode,t3);strcpy(operand,t4);
 }
 else if(strcmp(t1,"")!=0 && strcmp(t2,"")!=0 && strcmp(t3,"")!=0 && strcmp(t4,"")==0)
 {
  strcpy(add,t1);strcpy(label,"");strcpy(opcode,t2);strcpy(operand,t3);
 }
 else if(strcmp(t1,"")!=0 && strcmp(t2,"")!=0 && strcmp(t3,"")==0 && strcmp(t4,"")==0)
 {
   if(strcmp(t1,"END")==0)
   {
     strcpy(add,"");strcpy(label,"");strcpy(opcode,t1);strcpy(operand,t2);
   }
   else
   {
     strcpy(add,t1);strcpy(label,"");strcpy(opcode,t2);strcpy(operand,"");
   }
 }
 
}

int main()
{
  fp1=fopen("imm.txt","r");
  fp2=fopen("sym.txt","r");
  fp3=fopen("length.txt","r");
  fp4=fopen("obj.txt","w");
  fp5=fopen("objcode.txt","w");
  fp6=fopen("pass1tab.txt","r");

  fscanf(fp3,"%s%s",length,size);
  fscanf(fp1,"%s%s%s",label,opcode,operand);
  startadd=atoi(operand);
  readoptab();
  symtab();

  if(strcmp(opcode,"START")==0)
  {
    fprintf(fp4,"\t%s\t%s\t%s\n",label,opcode,operand);
    fprintf(fp5,"H^%s  ^00%s^0000%s\n",label,operand,length);
    fprintf(fp5,"T^00%s^%s",operand,size);
    readline();
  }
 while(strcmp(opcode,"END")!=0)
 {

   if(strcmp(opcode,"RESB")==0 || strcmp(opcode,"RESW")==0)
   {
     fprintf(fp4,"%s\t%s\t%s\t%s\n",add,label,opcode,operand);
   }
  else if(strcmp(opcode,"BYTE")==0)
   {
     fprintf(fp4,"%s\t%s\t%s\t%s\t",add,label,opcode,operand);
     j=0;
     for(i=2;i<strlen(operand)-1;i++)
     {
       sprintf(hex + j,"%02x",operand[i]);
       j+=2;
     }
     
     fprintf(fp4,"\t%s\n",hex);
     fprintf(fp5,"^%s",hex);
     
   }
  else if(strcmp(opcode,"WORD")==0)
   {
     sprintf(a,"%x",atoi(operand));
     fprintf(fp4,"%s\t%s\t%s\t%s\t\t00000%s\n",add,label,opcode,operand,a);
     fprintf(fp5,"^00000%s",a);
   }
  else
   {  
     i=0;
     while(strcmp(opcode,op[i].code)!=0)
       i++;
     j=0;
     while(strcmp(operand,sy[j].label1)!=0)
       j++;
     fprintf(fp4,"%s\t%s\t%s\t%s\t\t%s%s\n",add,label,opcode,operand,op[i].mem,sy[j].add1);
     fprintf(fp5,"^%s%s",op[i].mem,sy[j].add1);
          

   } 
      
   readline();
 } 
 
 fprintf(fp4,"%s\t%s\t%s\t%s\n",add,label,opcode,operand);
 fprintf(fp5,"\nE^00%d\n",startadd);
 
 fclose(fp1);
 fclose(fp2);
 fclose(fp3);
 fclose(fp4);
 fclose(fp5);
 fclose(fp6);
 
  return 0;
}
